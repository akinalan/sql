#+STARTUP: showall

* Cheat Sheet
** Keywords

   | ACTION         | DESCRIPTION                                                    | CHARACTERISTICS                                                                                                                                                               |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | SELECT         | selects data from the DATABASE                                 | - always choses data from a DATABASE                                                                                                                                              |
   |                |                                                                | - always in  combination with *FROM*                                                                                                                                              |
   |                |                                                                | - can select the entire DB or certain *TABLE* or *COLUMN*                                                                                                                         |
   |                |                                                                | - can be looking for *DISTINCT* VALUES, that means only specific information of the *TABLE*                                                                                       |
   |                |                                                                | - using with *INTO* you can create backup of tables                                                                                                                               |
   |                |                                                                | - using with *TOP* you only show the top entries of a TABLE                                                                                                                       |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | CREATE         | creates *DB*, *INDEX*, *VIEW*, *TABLE* or *PROCEDURE*          | - usually not used very often as it is only used to create the basics of the DB                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | REPLACE        | replaces *DB*, *INDEX*, *VIEW*, *TABLE* or *PROCEDURE*         | - used in conjunction with *CREATE*                                                                                                                                               |
   |                |                                                                | - replaces all of the data with new ones                                                                                                                                          |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | ADD            | adds *COLUMN* to existing *TABLE*                              | - can also add *CONSTRAINT* which adds constraints to existing columns                                                                                                            |
   |                |                                                                | - is used with *ALTER*                                                                                                                                                            |
   |                |                                                                | - can also add new rows in a *TABLE*                                                                                                                                              |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | ALTER          | updates *COLUMN* in a *TABLE*                                  | - always in combination with *ADD*, *DROP*                                                                                                                                        |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | UPDATE         | updates an existing row in a TABLE                             | - usually works with more specifications                                                                                                                                          |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | SET            | ste the values that are being updated                          | - always work in conjunction with *UPDATE*                                                                                                                                        |
   |                |                                                                | - always use *WHERE* with this query, if you omit this statement all records will be updated                                                                                      |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | DROP           | deletes *DB*, *COLUMN*, *CONSTRAINT*, *TABLE*, *INDEX*, *VIEW* | - usually only certain users have the right to use this command as it can hamper the functunality of the DB.                                                                      |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | DELETE         | delete records of a table.                                     | - always use the *WHERE* statement in conjunction with *DELETE* as this specifies which kind of record must be deleted if you do not use *WHERE* all the records will be deleted. |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | TRUNCATE TABLE | delete the data within a *TABLE*                               |                                                                                                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | JOIN           | joins the results of several *TABLE*                           | - *JOIN* or *INNER JOIN* returns rows that have matching values in both *TABLE*                                                                                                   |
   |                |                                                                | - *LEFT JOIN* returns rows that have matching values in the left table, if the data does not match in the right table it returns *NULL*                                           |
   |                |                                                                | - *RIGHT JOIN* returns that have matching values in the right table, if the data does not match in the left table it returns *NULL*                                               |
   |                |                                                                | - *OUTER JOIN* returns all rows when there is a match either in the left or right table, if there is no match it will be shown as well                                            |
   |                |                                                                | - *OUTER JOIN* is not supported by all SQL languages                                                                                                                              |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | UNION          | combines the results of 2 or more *SELECT* statements          | - *UNION* does not allow duplicates (*DISTINCT* values)                                                                                                                           |
   |                |                                                                | - *UNION ALL* allows duplicates                                                                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | BACKUP         | secures DB's                                                   | - this being used if you want to create *BACKUP* of a DB.                                                                                                                         |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | SHOW           | shows data in a DB                                             |                                                                                                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | GRANT OPTION   | grants the user the permission to grant rights themselve       | - can only give permissions that are not higher than his own                                                                                                                      |
   |                |                                                                | - be very careful with who you are giving *GRANT OPTION*                                                                                                                          |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | REVOKE         | revokes permissions of a user                                  |                                                                                                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | INSERT INTO    | insert new *ROW* into a TABLE                                  | - always works with the *VALUE* statement                                                                                                                                         |
   |                |                                                                | - you can also only insert into specifics *COLUMN* of a *ROW*                                                                                                                     |
   |                |                                                                | - in conjunction with *SELECT* you can copy dat from one table into another                                                                                                       |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | GROUP BY       | groups results of a query                                      | - usually works in conjunction with aggregated functions                                                                                                                          |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | ORDER BY       | orders the results of a query                                  | - as a standard it orders results ascending                                                                                                                                       |
   |                |                                                                | - you can change this by using the *DESC* statement                                                                                                                               |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
   | EXEC           | executes a stored *PROCEDURE*                                  |                                                                                                                                                                                   |
   |----------------+----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
  

   | TARGET    | DESCRIPTION                                                                |
   |-----------+----------------------------------------------------------------------------|
   | DATABASE  | - collection of *TABLE*                                                    |
   |           | - collection of data                                                       |
   |-----------+----------------------------------------------------------------------------|
   | TABLE     | - collection of *COLUMN* and *ROW*                                         |
   |           | - collection of data                                                       |
   |-----------+----------------------------------------------------------------------------|
   | COLUMN    | - part of a *TABLE*                                                        |
   |           | - collection of data                                                       |
   |-----------+----------------------------------------------------------------------------|
   | VIEW      | - virtual *TABLE* that shows data according to settings for specific users |
   |-----------+----------------------------------------------------------------------------|
   | PROCEDURE | - prepared SQL code that can be called upon when needed                    |
   |-----------+----------------------------------------------------------------------------|


   | CONSTRAINT  | DESCRIPTION                                         | CHARACTERISTICS                                                                       |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | CONSTRAINT  | puts a limitation on a *COLUMN*                     | - allows data in a column only to be inserted if it is in a certain way                 |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | PRIMARY KEY | uniquely identifies each record in the *TABLE*      | - each TABLE can only have one *PRIMARY KEY*                                            |
   |             |                                                     | - it can be added directly after the *COLUMN* or as a seperate statement                |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | FOREIGN KEY | links 2 tables                                      | - refers to the *PRIMARY KEY* of another *TABLE*                                        |
   |             |                                                     | - always uses the *REFERENCES* statement in or to identify the *PRIMARY KEY*            |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | DEFAULT     | provides a default value for the concerned *COLUMN* | - this value is always entered unless there is specific data provided for that *COLUMN* |
   |             |                                                     | - it can also be used in conjunctions with *FUNCTION*                                   |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | UNIQUE      | ensures that all values in in a *COLUMN* are unique | - this means that in the same *COLUMN* cannot be the same value                         |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | CHECK       | limits the value that can be placed in a *COLUMN*   | - this means that the data entered in a *COLUMN* must meet certain conditions           |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | INDEX       | creates indexes in *TABLE*                          | - very quick data retieval                                                              |
   |             |                                                     | - can also be created for multiple *COLUMN*                                             |
   |             |                                                     | - should only be used in *TABLE* with frequent data retrieval                           |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | NOT NULL    | ensure that there is data entered in a *COLUMN*     | - there must be data entered in a *COLUMN*                                              |
   |-------------+-----------------------------------------------------+-----------------------------------------------------------------------------------------|


   | CONDITIONS | DESCRIPTION                                                         | CHARACTERISTICS                                                          |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | WHERE      | filters the results of a query                                      | - uses specific CONDITIONS                                               |
   |            |                                                                     | - text values need to be put in single quotes                            |
   |            |                                                                     | - numbers need not to be put in any signs                                |
   |            |                                                                     | - Operators that can be used: =, <>, !=, >, <, >=, <=, BETWEEN, LIKE, IN |
   |            |                                                                     | - is being used with different *ACTION*                                  |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | FROM       | specifies which *TABLE* to *SELECT* or delete data from             |                                                                          |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | HAVING     | used instead of *WHERE* with aggregated functions                   |                                                                          |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | CASE       | creates different output based on CONDITIONS                        | - comparable with IF THEN statements                                     |
   |            |                                                                     | - *CASE* marks the start *END* the end of this statement                 |
   |            |                                                                     | - always uses *WHEN*, *THEN* and *ELSE* statements                       |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | TOP        | limits the results by only showing the *TOP* results of the *TABLE* | - not supported in all DB's                                              |
   |            |                                                                     | - ORACLE uses *ROWNUM*, MySQL uses *LIMIT*                               |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | LIMIT      | limits the results of a query                                       |                                                                          |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | ASC        | show results ascending                                              | - this is usually the standard setting                                   |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | DESC       | show results descending                                             | - this must be requested in queries                                      |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|
   | VALUES     | specify the values of the *INSERT INTO* statement                   |                                                                          |
   |------------+---------------------------------------------------------------------+--------------------------------------------------------------------------|


** DATA TYPES

   | STRING                      | DESCIPTION               | CHARACTERISTICS                                               |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | CHAR(size)                  | fixed length STRING      | - can contain letters, numbers and special characters         |
   |                             |                          | - size specifies the length of the string in characters       |
   |                             |                          | - length can range between 0 and 255 characters               |
   |                             |                          | - default length is 1                                         |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | VARCHAR(size)               | variable length STRING   | - can contain letters, numbers and special characters         |
   |                             |                          | - size specifies the length of the string in characters       |
   |                             |                          | - length can range between 0 to 65535 characters              |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | BINARY(size)                | equal to *CHAR(size)*    | - stores data in binary byte strings                          |
   |                             |                          | - size specifies the length in bytes                          |
   |                             |                          | - default is 1                                                |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | VARBINARY(size)             | equal to *VARCHAR(size)* | - stores data in binary byte strings                          |
   |                             |                          | - size specifies the length in bytes                          |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | TINYBLOB                    | for BLOB                 | - binary large objects                                        |
   |                             |                          | - max length 255 bytes                                        |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | TINYTEXT                    | holds a *STRING*         | - max length 255 characters                                   |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | TEXT(size)                  | holds a *STRING*         | - max length 65535 characters                                 |
   |                             |                          | - size specifies the length in bytes                          |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | BLOB(size)                  | for BLOB                 | - binary large objects                                        |
   |                             |                          | - max length 65535 bytes                                      |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | MEDIUMTEXT                  | holds a *STRING*         | - max length 16777215 characters                              |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | MEDIUMBLOB                  | for BLOB                 | - binary large objects                                        |
   |                             |                          | - max length 16777215 bytes                                   |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | LONGTEXT                    | holds *STRING*           | - max length 4294967295 characters                            |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | LONGBLOB                    | for BLOB                 | - binary large objects                                        |
   |                             |                          | - max length 4294967295 bytes                                 |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | ENUM(val1, val2, val3, ...) | holds *STRINGOBJECT*     | - an object that has only one value out of a list of values   |
   |                             |                          | - list up to 65535 values                                     |
   |-----------------------------+--------------------------+---------------------------------------------------------------|
   | SET(val1, val2, val3, ...)  | holds a *STRINGOBJECT*   | - an object that has 0 or more values out of a list of values |
   |                             |                          | - list up to 64 values                                        |
   |-----------------------------+--------------------------+---------------------------------------------------------------|

   
   | NUMERIC                   | DESCRIPTION                                                      | CHARACTERISTICS                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | BIT(size)                 | bit-value type                                                   | - number of bits per value is specified in size             |
   |                           |                                                                  | - seize range is between 1 and 64                           |
   |                           |                                                                  | - default is 1                                              |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | TINYINT(size)             | small *INTEGER*                                                  | - *SIGNED* Range: -128 to 127                               |
   |                           |                                                                  | - *UNSIGNED* Range: 0 to 255                                |
   |                           |                                                                  | - size parameter specifies the maximum display width (255)  |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | BOOL                      | zero considered as false / nonzero values are considered as true |                                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | BOOLEAN                   | equal to *BOOL*                                                  |                                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | SMALLINT(size)            | small *INTEGER*                                                  | - *SIGNED* Range: -32768 to 32767                           |
   |                           |                                                                  | - *UNSIGNED* Range: 0 to 65535                              |
   |                           |                                                                  | - size parameter specifies the maximum display width (255)  |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | INT(size)                 | medium *INTEGER*                                                 | - can also be expressed as *INTEGER(size)*                  |
   |                           |                                                                  | - *SIGNED* Range: -2147483648 to 2147483647                 |
   |                           |                                                                  | - *UNSIGNED* Range: 0 to 4294967295                         |
   |                           |                                                                  | - size parameter specifies the maximum display width (255)  |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | BIGINT(size)              | large *INTEGER*                                                  |                                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | FLOAT(p)                  | floating point number                                            | - p determines if you use *FLOAT* or *DOUBLE*               |
   |                           |                                                                  | - p = 0 to 24 : *FLOAT*                                     |
   |                           |                                                                  | - p = 25 to 53: *DOUBLE*                                    |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | DOUBLE(size, d)           | normal sized floating point number                               | - size specifies the numbers of digits                      |
   |                           |                                                                  | - d specifies the numbers of digits after the decimal point |
   |                           |                                                                  | - default value for d is 0                                  |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | DOUBLE PRECISION(size, d) |                                                                  |                                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | DECIMAL(size, d)          | exact fixed point number                                         | - size specifies the total number of the digits             |
   |                           |                                                                  | - maxumum number for size is 65                             |
   |                           |                                                                  | - d specifies the number of digits after the decimal point  |
   |                           |                                                                  | - maximum number for d is 30                                |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | UNSIGNED                  | disallows negative options                                       |                                                             |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|
   | ZEROFILL                  | fills empty cells automatically                                  | - loads *UNSIGNED* automatically                            |
   |---------------------------+------------------------------------------------------------------+-------------------------------------------------------------|


   | DATE/TIME      | DESCRIPTION          | CHARACTERISTICS                                                                                                |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|
   | DATE           | date format          | - YYYY-MM-DD                                                                                                   |
   |                |                      | - Range: 1000-01-01 to 9999-12-31                                                                              |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|
   | DATETIME(fsp)  | date and time format | - YYYY-MM-DD hh:mm:ss                                                                                          |
   |                |                      | - RANGE: 1000-01-01 00:00:00 to 9999-12-31 23:59:59                                                            |
   |                |                      | - adding *DEFAULT* or *ON UPDATE* to get automatic initialization and updating the current date and time       |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|
   | TIMESTAMP(fsp) | a TIMESTAMP          | - format similar to *DATETIME*                                                                                 |
   |                |                      | - Range: 1970-01-01 00:00:01 UTC to 2038-01-09 03:14:07 UTC                                                    |
   |                |                      | - adding *DEFAULT CURRENT_TIMESTAMP* or *ON UPDATE CURRENT_TIMESTAMP* intitalizes and updates it automatically |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|
   | TIME(fsp)      | time format          | - hh:mm:ss                                                                                                     |
   |                |                      | - Range: -838:59:59 to 838:59:59                                                                               |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|
   | YEAR           | year format          | - YYYY                                                                                                         |
   |                |                      | - Range: 1901 to 2155 and 0000                                                                                     |
   |----------------+----------------------+----------------------------------------------------------------------------------------------------------------|


   | OTHER            | DESCRIPTION                                               | CHARACTERISTICS                 |
   |------------------+-----------------------------------------------------------+---------------------------------|
   | SQL_VARIANT      | stores various data types                                 | - max 8000 bytes                |
   |                  |                                                           | - no text, ntext and timestamps |
   |------------------+-----------------------------------------------------------+---------------------------------|
   | UNIQUEIDENTIFIER | stores globally unique identifier (GUID)                  |                                 |
   |------------------+-----------------------------------------------------------+---------------------------------|
   | XML              | stores XML formated data                                  | - max 2 GB                      |
   |------------------+-----------------------------------------------------------+---------------------------------|
   | CURSOR           | stores reference to a cursor used for database operations |                                 |
   |------------------+-----------------------------------------------------------+---------------------------------|
   

** OPERATORS

   | LOGICAL | What is the purpose                                                      | Chracteristics                                                                |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | ALL     | returns true if the query meets all of the *CONDITION*                   |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | ANY     | returns true if the query meets any of the *CONDITION*                   |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | EXISTS  | returns true if the tests for the existence of any record are successful |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | SOME    | returns true if the query meets any of the *CONDITION*                   |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | LIKE    | returns trueif the pattern is met                                        | - always works in conjunction with *WHERE*                                    |
   |         |                                                                          | - usually used for *WILDCARD*                                                 |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | BETWEEN | returns true if the values are in a predefined range                     | - can include numbers, text or dates                                          |
   |         |                                                                          | - is inclusive which means beginning and end are considered part of the range |
   |         |                                                                          | - in combination with *NOT* you can exclude a range                           |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | AND     | returns true if several *CONDITION* are met                              |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | OR      | returns true if one of the *CONDITION* is met                            |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | NOT     | negates commands                                                         |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | IN      | allows multiple values in the *WHERE* clause                             | - shorthand for multiple *OR* conditions                                      |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | IS      | returns true is a certain *CONDITION* is met                             |                                                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|
   | AS      | renames the *COLUMN*                                                     | - provides aliases for requests                                               |
   |---------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------|

   
   | ARITHMETIC | DESCRIPTION                                    |
   |------------+------------------------------------------------|
   | +          | ADD                                            |
   |------------+------------------------------------------------|
   | -          | subtract                                      |
   |------------+------------------------------------------------|
   | *          | multiply                                       |
   |------------+------------------------------------------------|
   | /          | divide                                         |
   |------------+------------------------------------------------|
   | %          | modulo (displays the reaimder of the division) |
   |------------+------------------------------------------------|


   | BITWISE | DESCRIPTION          |
   |---------+----------------------|
   | &       | bitwise AND          |
   |---------+----------------------|
   | ^       | bitwise exclusive OR |
   |---------+----------------------|
   

   | COMPARISON | DESCRIPTION              |
   |------------+--------------------------|
   | =          | equal to                 |
   |------------+--------------------------|
   | >          | greater than             |
   |------------+--------------------------|
   | <          | less than                |
   |------------+--------------------------|
   | >=         | greater than or equal to |
   |------------+--------------------------|
   | <=         | less than or equal to    |
   |------------+--------------------------|
   | <>         | unequal to               |
   |------------+--------------------------|


   | COMPOUND | DESCRIPTION              |
   |----------+--------------------------|
   | +=       | add equals               |
   |----------+--------------------------|
   | -=       | subtract equals          |
   |----------+--------------------------|
   | *=       | multiply equals          |
   |----------+--------------------------|
   | /=       | divide equals            |
   |----------+--------------------------|
   | %=       | modulo equals            |
   |----------+--------------------------|
   | &=       | bitwise and equals       |
   |----------+--------------------------|
   | ^-=      | bitwise exclusive equals |
   |----------+--------------------------|
   

** FUNCTIONS

   | STRING | DESCRIPTION |
   |--------+-------------|
   |        |             |
   |--------+-------------|
   
** COMMENTS
